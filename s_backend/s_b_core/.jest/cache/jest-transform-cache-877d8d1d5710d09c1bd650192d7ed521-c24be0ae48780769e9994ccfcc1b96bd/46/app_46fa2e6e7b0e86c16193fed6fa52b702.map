{"file":"C:\\Users\\kevin\\Desktop\\BeKind\\ThrowAwayPrototypes\\BeKind_Playground\\s_backend\\s_b_core\\src\\app.ts","mappings":";;AAAA,wCAA0C;AAC1C,iCAAmC;AACnC,2BAA6B;AAC7B,8BAAgC;AAEhC,gCAAgC;AAChC,2GAA2G;AAE3G;IAQE;QANO,WAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,OAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAM1B,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAPD,sBAAkB,WAAI;aAAtB;YACE,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,0BAA0B;;;;OAA3B;IAOM,uBAAS,GAAhB;QACE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAiB;YACzC,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YAElD,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAEO,oBAAM,GAAd;QACE,kEAAkE;QAClE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAEhC,sDAAsD;QACtD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IACH,UAAC;AAAD,CAAC,AAjCD,IAiCC;AAED,kBAAe,IAAI,GAAG,EAAE,CAAC","names":[],"sources":["C:\\Users\\kevin\\Desktop\\BeKind\\ThrowAwayPrototypes\\BeKind_Playground\\s_backend\\s_b_core\\src\\app.ts"],"sourcesContent":["import * as bodyParser from \"body-parser\";\r\nimport * as express from \"express\";\r\nimport * as http from \"http\";\r\nimport * as io from \"socket.io\";\r\n\r\n/** Add more params to socket */\r\n// interface IExtendedSocket extends io.Socket {} // when uncommented change io.Socket with IExtendedSocket\r\n\r\nclass App {\r\n  public app: express.Application;\r\n  public server = http.createServer();\r\n  public io = io(this.server);\r\n  public static get PORT(): number {\r\n    return 8090;\r\n  } // getter to make it const\r\n\r\n  constructor() {\r\n    this.app = express();\r\n    this.config();\r\n  }\r\n\r\n  public runServer() {\r\n    this.io.on(\"connection\", (client: io.Socket) => {\r\n      console.log(\"New client connected: \" + client.id);\r\n\r\n      client.on(\"disconnect\", () => {\r\n        console.log(\"Client disconnected: \" + client.id);\r\n      });\r\n    });\r\n\r\n    this.io.listen(App.PORT);\r\n    console.log(\"App:runServer: Listening on port: \" + App.PORT);\r\n  }\r\n\r\n  private config(): void {\r\n    // support application/json type post data (might be needed later)\r\n    this.app.use(bodyParser.json());\r\n\r\n    // support application/x-www-form-urlencoded post data\r\n    this.app.use(bodyParser.urlencoded({ extended: false }));\r\n  }\r\n}\r\n\r\nexport default new App();\r\n"],"version":3}